plugins {
    id 'com.android.application'
//    id 'com.walker.autotrack'
    id 'com.google.protobuf'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt' // 引入kapt后apt就不生效了？？
}

android {
    compileSdkVersion project.ANDROID_COMPILE_SDK_VERSION as int
//    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.demo"
        minSdkVersion ANDROID_MIN_SDK_VERSION as int
        targetSdkVersion ANDROID_TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            proto {
                srcDir 'src/proto' // 指定.proto文件路径
                include '**/*.proto'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    buildFeatures {
        viewBinding true
    }

}

protobuf {
    protoc {
        // boolean isMaxOsX = org.gradle.internal.os.OperatingSystem.current().isMacOsX()
        if (project.hasProperty('protoc_platform')) {
            artifact = "com.google.protobuf:protoc:3.5.1:${protoc_platform}"
        } else {
            artifact = "com.google.protobuf:protoc:3.5.1"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}// 生产java源码
            }
        }
    }

}

dependencies {
    implementation project(':constant')
    implementation project(':track-sdk')
    implementation project(':storage-sdk')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    implementation 'com.google.protobuf:protobuf-java:3.5.1'
    implementation 'com.google.protobuf:protoc:3.5.1'
    implementation 'io.github.billywei01:packable:1.0.2'
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation 'com.airbnb.android:lottie:5.2.0'

    // kotlin
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlinVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    implementation "androidx.activity:activity-ktx:1.2.2"
    implementation "androidx.fragment:fragment-ktx:1.3.3"
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'

    // apt
    compileOnly project(':apt:apt-annotation')
    implementation project(':apt:apt-library')
    annotationProcessor project(':apt:apt-processor')

    // kapt
    implementation project(path: ':apt:kapt-library')
    kapt project(path: ':apt:kapt-annotation')
    implementation project(path: ':apt:kapt-annotation')
    kapt project(path: ':apt:kapt-processor')
    // 一定要kapt

    compileOnly 'com.tencent:mmkv:1.2.11'
    compileOnly "androidx.room:room-runtime:$rootProject.roomVersion"

    // rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.tencent.wcdb:wcdb-android:1.0.8'

    // log
    // log --> logger
    implementation 'com.orhanobut:logger:1.15'
    // log --> timber
    implementation 'com.jakewharton.timber:timber:4.3.1'
    // log --> logback
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.github.tony19:logback-android:2.0.0'
    // log --> XLog
    implementation 'com.elvishew:xlog:1.10.1'
    // log --> mars
    compileOnly 'com.tencent.mars:mars-wrapper:1.2.5'
    compileOnly 'com.tencent.mars:mars-core:1.2.5' // for app
    compileOnly "com.tencent.mars:mars-xlog:1.2.5" // just use xlog, included in mars-wrapper and mars-core

    // shadow
    implementation "com.tencent.shadow.dynamic:host:$rootProject.shadow_version"
    // Shadow Transform后业务代码会有一部分实际引用runtime中的类
    // 如果不以compileOnly方式依赖，会导致其他Transform或者Proguard找不到这些类
    compileOnly "com.tencent.shadow.core:runtime:$shadow_version"

    // -- 视频库 --（https://github.com/CarGuo/GSYVideoPlayer）
    implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-java:v8.3.4-release-jitpack'
    //是否需要ExoPlayer模式
    implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-exo2:v8.3.4-release-jitpack'
    //是否需要AliPlayer模式
    implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-aliplay:8.3.4-release-jitpack'
    //根据你的需求ijk模式的so
//    implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-arm64:v8.3.4-release-jitpack'
    implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv7a:v8.3.4-release-jitpack'
//    implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv5:v8.3.4-release-jitpack'
//    implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-x86:v8.3.4-release-jitpack'
//    implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-x64:v8.3.4-release-jitpack'

    // test
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
}
