plugins {
    id 'com.android.application'
    id 'com.walker.autotrack'
//    id 'com.google.protobuf'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)
//    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.demo"
        minSdkVersion Integer.parseInt(project.ANDROID_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
//            java {
//                srcDir 'src/main/java'
//            }
//            proto {
//                srcDir 'src/proto' // 指定.proto文件路径
//                include '**/*.proto'
//            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//protobuf {
//    protoc {
//        // for apple m1, please add protoc_platform=osx-x86_64 in gradle.properties
//        if (project.hasProperty('protoc_platform')) {
//            artifact = "com.google.protobuf:protoc:3.5.1:${protoc_platform}"
//        } else {undefined
//            artifact = "com.google.protobuf:protoc:3.5.1"
//        }
//    }
//
//    generateProtoTasks {
//        all().each { task ->
//            task.builtins {
//                remove java
//            }
//            task.builtins {
//                java {}// 生产java源码
//            }
//        }
//    }
//}

dependencies {
    implementation project(':track-sdk')
    implementation project(':storage-sdk')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.google.protobuf:protobuf-java:3.5.1'
    implementation 'com.google.protobuf:protoc:3.5.1'
    implementation 'io.github.billywei01:packable:1.0.2'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.0"

    // apt
    compileOnly project(':apt-annotation')
    implementation project(':apt-library')
    annotationProcessor project(':apt-processor')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    compileOnly 'com.tencent:mmkv:1.2.11'
    compileOnly "androidx.room:room-runtime:$rootProject.roomVersion"


    // rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.tencent.wcdb:wcdb-android:1.0.8'

    // log
    // log --> logger
    implementation 'com.orhanobut:logger:1.15'
    // log --> timber
    implementation 'com.jakewharton.timber:timber:4.3.1'
    // log --> logback
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.github.tony19:logback-android:2.0.0'
    // log --> XLog
    implementation 'com.elvishew:xlog:1.10.1'
    // log --> mars
//    implementation 'com.tencent.mars:mars-wrapper:1.2.5'
//    implementation 'com.tencent.mars:mars-core:1.2.5' // for app
//    implementation "com.tencent.mars:mars-xlog:1.2.5" // just use xlog, included in mars-wrapper and mars-core

}
