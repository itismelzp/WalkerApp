package com.walker.apt.proxy;

import javax.lang.model.element.PackageElement;
import javax.lang.model.element.TypeElement;
import javax.lang.model.util.Elements;

/**
 * Created by walkerzpli on 2022/1/14.
 */
public class PackClassCreatorProxy {

    public static final String SUFFIX = "$Encoder";

    private static final String TAB_SPACE = "    ";

    private String mOriginClassName;
    private String mTargetClassName;
    private String mPackageName;
    private TypeElement mTypeElement;

    public PackClassCreatorProxy(Elements elementUtils, TypeElement classElement) {
        this.mTypeElement = classElement;
        PackageElement packageElement = elementUtils.getPackageOf(mTypeElement);
        String packageName = packageElement.getQualifiedName().toString();
        String className = mTypeElement.getSimpleName().toString();
        this.mPackageName = packageName;
        this.mOriginClassName = className;
        this.mTargetClassName = className + SUFFIX;
    }

    public String generateJavaCode() {
        StringBuilder builder = new StringBuilder();
        builder.append("package ").append(mPackageName).append(";\n\n");
        builder.append("import android.os.Parcel;\n");
        builder.append("import android.os.Parcelable;\n");
        builder.append("import com.walker.storage.winkkv.WinkKV;\n\n");

        builder.append("/**\n * This class is generated by IDE, do not edit.\n */\n");
        builder.append("public class ").append(mTargetClassName).append(" implements WinkKV.Encoder<").append(mOriginClassName).append(">").append(" {\n\n");
        builder.append(TAB_SPACE).append("public static ").append(mTargetClassName).append(" INSTANCE = new ").append(mTargetClassName).append("();\n\n");
        generateMethods(builder);
        builder.append("}\n");
        return builder.toString();
    }

    private void generateMethods(StringBuilder builder) {
        builder.append(TAB_SPACE).append("private ").append(mTargetClassName).append("() {\n");
        builder.append(TAB_SPACE).append("}\n\n");

        builder.append(TAB_SPACE).append("@Override\n");
        builder.append(TAB_SPACE).append("public String tag() {\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("return \"").append(mTargetClassName).append("\";\n");
        builder.append(TAB_SPACE).append("}\n\n");

        builder.append(TAB_SPACE).append("@Override\n");
        builder.append(TAB_SPACE).append("public byte[] encode(").append(mOriginClassName).append(" obj) {\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("return marshall(obj);\n");
        builder.append(TAB_SPACE).append("}\n\n");

        builder.append(TAB_SPACE).append("@Override\n");
        builder.append(TAB_SPACE).append("public ").append(mOriginClassName).append(" decode(byte[] bytes, int offset, int length) {\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("Parcel parcel = unmarshall(bytes, offset, length);\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("return ").append(mOriginClassName).append(".CREATOR.createFromParcel(parcel);\n");
        builder.append(TAB_SPACE).append("}\n\n");

        builder.append(TAB_SPACE).append("private byte[] marshall(Parcelable parcelable) {\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("Parcel parcel = Parcel.obtain();\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("parcel.setDataPosition(0);\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("parcelable.writeToParcel(parcel, 0);\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("byte[] bytes = parcel.marshall();\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("parcel.recycle();\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("return bytes;\n");
        builder.append(TAB_SPACE).append("}\n\n");

        builder.append(TAB_SPACE).append("private Parcel unmarshall(byte[] bytes, int offset, int length) {\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("Parcel parcel = Parcel.obtain();\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("parcel.unmarshall(bytes, offset, length);\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("parcel.setDataPosition(0);\n");
        builder.append(TAB_SPACE).append(TAB_SPACE).append("return parcel;\n");
        builder.append(TAB_SPACE).append("}\n\n");

    }

    public String getProxyClassFullName() {
        return mPackageName + "." + mTargetClassName;
    }

    public TypeElement getTypeElement() {
        return mTypeElement;
    }

}
